Traceback (most recent call last):
  File "/usr/local/python/3.12.1/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/codespace/.local/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/python/3.12.1/lib/python3.12/asyncio/base_events.py", line 684, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import psycopg2
import pymysql
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from scipy.spatial.distance import euclidean

def get_pg_data():
    conn = psycopg2.connect(
        host="pg-2ac2cab5-postgresqlll.d.aivencloud.com",
        user="avnadmin",
        password="AVNS_ZZ2Nug85jAxr0Snylw5",
        database="defaultdb",
        port=21381
    )
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM faruqqq.postgree")
    data = cursor.fetchall()
    columns = [desc[0] for desc in cursor.description]
    cursor.close()
    conn.close()
    return pd.DataFrame(data, columns=columns)

def get_mysql_data():
    conn = pymysql.connect(
        host="mysql-22b75224-mmysql.d.aivencloud.com",
        user="avnadmin",
        password="AVNS_7Nf-SiZjwaL2z2c9ohx",
        database="defaultdb",
        port=21815
    )
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM flowers")
    data = cursor.fetchall()
    columns = [desc[0] for desc in cursor.description]
    cursor.close()
    conn.close()
    return pd.DataFrame(data, columns=columns)

# Ambil data dari kedua database
df_postgresql = get_pg_data()
df_mysql = get_mysql_data()

df_postgresql = df_postgresql.rename(columns={'Class': 'class'})

# Gabungkan berdasarkan kolom 'id' dan 'Class'
df_merged = pd.merge(df_mysql, df_postgresql, on=["id", "class"], how="inner")

# Ambil data fitur numerik
feature_columns = ["petal length", "petal width", "sepal length", "sepal width"]
data_values = df_merged[feature_columns].values

# Ambil referensi dari baris terakhir (baris ke-152 jika dihitung dari 1, atau index -1)
reference_point = data_values[-1]

def compute_distances(data, reference):
    return np.array([euclidean(row, reference) for row in data])

# Hitung jarak Euclidean dari setiap baris ke referensi
df_merged["distance"] = compute_distances(data_values, reference_point)

# Tentukan threshold outlier berdasarkan persentil ke-95 (bisa disesuaikan)
threshold = np.percentile(df_merged["distance"], 93.5)
df_merged["outlier"] = df_merged["distance"] > threshold

# Cetak hasil data dengan outlier
print(df_merged.to_string(index=False))

# Visualisasi scatter plot dengan warna berdasarkan outlier
plt.figure(figsize=(8, 6))
sns.scatterplot(
    x=df_merged["sepal length"], y=df_merged["sepal width"],
    hue=df_merged["outlier"], palette={False: "blue", True: "red"}
)
plt.title("Outlier Detection (Sepal)")
plt.show()

plt.figure(figsize=(8, 6))
sns.scatterplot(
    x=df_merged["petal length"], y=df_merged["petal width"],
    hue=df_merged["outlier"], palette={False: "blue", True: "red"}
)
plt.title("Outlier Detection (Petal)")
plt.show()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mProgrammingError[0m                          Traceback (most recent call last)
Cell [0;32mIn[2], line 43[0m
[1;32m     41[0m [38;5;66;03m# Ambil data dari kedua database[39;00m
[1;32m     42[0m df_postgresql [38;5;241m=[39m get_pg_data()
[0;32m---> 43[0m df_mysql [38;5;241m=[39m [43mget_mysql_data[49m[43m([49m[43m)[49m
[1;32m     45[0m df_postgresql [38;5;241m=[39m df_postgresql[38;5;241m.[39mrename(columns[38;5;241m=[39m{[38;5;124m'[39m[38;5;124mClass[39m[38;5;124m'[39m: [38;5;124m'[39m[38;5;124mclass[39m[38;5;124m'[39m})
[1;32m     47[0m [38;5;66;03m# Gabungkan berdasarkan kolom 'id' dan 'Class'[39;00m

Cell [0;32mIn[2], line 34[0m, in [0;36mget_mysql_data[0;34m()[0m
[1;32m     26[0m conn [38;5;241m=[39m pymysql[38;5;241m.[39mconnect(
[1;32m     27[0m     host[38;5;241m=[39m[38;5;124m"[39m[38;5;124mmysql-22b75224-mmysql.d.aivencloud.com[39m[38;5;124m"[39m,
[1;32m     28[0m     user[38;5;241m=[39m[38;5;124m"[39m[38;5;124mavnadmin[39m[38;5;124m"[39m,
[0;32m   (...)[0m
[1;32m     31[0m     port[38;5;241m=[39m[38;5;241m21815[39m
[1;32m     32[0m )
[1;32m     33[0m cursor [38;5;241m=[39m conn[38;5;241m.[39mcursor()
[0;32m---> 34[0m [43mcursor[49m[38;5;241;43m.[39;49m[43mexecute[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mSELECT * FROM flowers[39;49m[38;5;124;43m"[39;49m[43m)[49m
[1;32m     35[0m data [38;5;241m=[39m cursor[38;5;241m.[39mfetchall()
[1;32m     36[0m columns [38;5;241m=[39m [desc[[38;5;241m0[39m] [38;5;28;01mfor[39;00m desc [38;5;129;01min[39;00m cursor[38;5;241m.[39mdescription]

File [0;32m/usr/local/python/3.12.1/lib/python3.12/site-packages/pymysql/cursors.py:153[0m, in [0;36mCursor.execute[0;34m(self, query, args)[0m
[1;32m    149[0m     [38;5;28;01mpass[39;00m
[1;32m    151[0m query [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mmogrify(query, args)
[0;32m--> 153[0m result [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_query[49m[43m([49m[43mquery[49m[43m)[49m
[1;32m    154[0m [38;5;28mself[39m[38;5;241m.[39m_executed [38;5;241m=[39m query
[1;32m    155[0m [38;5;28;01mreturn[39;00m result

File [0;32m/usr/local/python/3.12.1/lib/python3.12/site-packages/pymysql/cursors.py:322[0m, in [0;36mCursor._query[0;34m(self, q)[0m
[1;32m    320[0m conn [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_get_db()
[1;32m    321[0m [38;5;28mself[39m[38;5;241m.[39m_clear_result()
[0;32m--> 322[0m [43mconn[49m[38;5;241;43m.[39;49m[43mquery[49m[43m([49m[43mq[49m[43m)[49m
[1;32m    323[0m [38;5;28mself[39m[38;5;241m.[39m_do_get_result()
[1;32m    324[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39mrowcount

File [0;32m/usr/local/python/3.12.1/lib/python3.12/site-packages/pymysql/connections.py:563[0m, in [0;36mConnection.query[0;34m(self, sql, unbuffered)[0m
[1;32m    561[0m     sql [38;5;241m=[39m sql[38;5;241m.[39mencode([38;5;28mself[39m[38;5;241m.[39mencoding, [38;5;124m"[39m[38;5;124msurrogateescape[39m[38;5;124m"[39m)
[1;32m    562[0m [38;5;28mself[39m[38;5;241m.[39m_execute_command(COMMAND[38;5;241m.[39mCOM_QUERY, sql)
[0;32m--> 563[0m [38;5;28mself[39m[38;5;241m.[39m_affected_rows [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_read_query_result[49m[43m([49m[43munbuffered[49m[38;5;241;43m=[39;49m[43munbuffered[49m[43m)[49m
[1;32m    564[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_affected_rows

File [0;32m/usr/local/python/3.12.1/lib/python3.12/site-packages/pymysql/connections.py:825[0m, in [0;36mConnection._read_query_result[0;34m(self, unbuffered)[0m
[1;32m    823[0m [38;5;28;01melse[39;00m:
[1;32m    824[0m     result [38;5;241m=[39m MySQLResult([38;5;28mself[39m)
[0;32m--> 825[0m     [43mresult[49m[38;5;241;43m.[39;49m[43mread[49m[43m([49m[43m)[49m
[1;32m    826[0m [38;5;28mself[39m[38;5;241m.[39m_result [38;5;241m=[39m result
[1;32m    827[0m [38;5;28;01mif[39;00m result[38;5;241m.[39mserver_status [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m/usr/local/python/3.12.1/lib/python3.12/site-packages/pymysql/connections.py:1199[0m, in [0;36mMySQLResult.read[0;34m(self)[0m
[1;32m   1197[0m [38;5;28;01mdef[39;00m [38;5;21mread[39m([38;5;28mself[39m):
[1;32m   1198[0m     [38;5;28;01mtry[39;00m:
[0;32m-> 1199[0m         first_packet [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mconnection[49m[38;5;241;43m.[39;49m[43m_read_packet[49m[43m([49m[43m)[49m
[1;32m   1201[0m         [38;5;28;01mif[39;00m first_packet[38;5;241m.[39mis_ok_packet():
[1;32m   1202[0m             [38;5;28mself[39m[38;5;241m.[39m_read_ok_packet(first_packet)

File [0;32m/usr/local/python/3.12.1/lib/python3.12/site-packages/pymysql/connections.py:775[0m, in [0;36mConnection._read_packet[0;34m(self, packet_type)[0m
[1;32m    773[0m     [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_result [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m [38;5;28mself[39m[38;5;241m.[39m_result[38;5;241m.[39munbuffered_active [38;5;129;01mis[39;00m [38;5;28;01mTrue[39;00m:
[1;32m    774[0m         [38;5;28mself[39m[38;5;241m.[39m_result[38;5;241m.[39munbuffered_active [38;5;241m=[39m [38;5;28;01mFalse[39;00m
[0;32m--> 775[0m     [43mpacket[49m[38;5;241;43m.[39;49m[43mraise_for_error[49m[43m([49m[43m)[49m
[1;32m    776[0m [38;5;28;01mreturn[39;00m packet

File [0;32m/usr/local/python/3.12.1/lib/python3.12/site-packages/pymysql/protocol.py:219[0m, in [0;36mMysqlPacket.raise_for_error[0;34m(self)[0m
[1;32m    217[0m [38;5;28;01mif[39;00m DEBUG:
[1;32m    218[0m     [38;5;28mprint[39m([38;5;124m"[39m[38;5;124merrno =[39m[38;5;124m"[39m, errno)
[0;32m--> 219[0m [43merr[49m[38;5;241;43m.[39;49m[43mraise_mysql_exception[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_data[49m[43m)[49m

File [0;32m/usr/local/python/3.12.1/lib/python3.12/site-packages/pymysql/err.py:150[0m, in [0;36mraise_mysql_exception[0;34m(data)[0m
[1;32m    148[0m [38;5;28;01mif[39;00m errorclass [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m    149[0m     errorclass [38;5;241m=[39m InternalError [38;5;28;01mif[39;00m errno [38;5;241m<[39m [38;5;241m1000[39m [38;5;28;01melse[39;00m OperationalError
[0;32m--> 150[0m [38;5;28;01mraise[39;00m errorclass(errno, errval)

[0;31mProgrammingError[0m: (1146, "Table 'defaultdb.flowers' doesn't exist")

